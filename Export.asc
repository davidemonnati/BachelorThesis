# Questo script ha come responsabilità quella di esportare i modelli ADOxx in Thingsboard.
# L'obiettivo è quello di far selezionare all'utente, tramite una MLISTBOX, quali modelli vuole esportare e riconoscere
# in automatico il tipo del modello e degli oggetti che ci sono all'interno.

EXECUTE file:("D:\\Universita\\Tesi\\ADOxx\\Script\\ExportLogicThingsBoard.asc")
EXECUTE file:("D:\\Universita\\Tesi\\ADOxx\\Script\\auth.asc")
EXECUTE file:("D:\\Universita\\Tesi\\ADOxx\\Script\\ExportScenarioThingsBoard.asc")

SELECT_MODEL

# Procedura che permette all'utente di selezionare il modello che desidera caricare su thingsboard e in automatico controlla
# se è di tipo IoT Scenario o di tipo IoT Logic, selezionando infine la procedura adatta. 
# E' inoltre importante verificare che il modello sia di tipo PSM e sia stato convertito per thingsboard.
PROCEDURE global SELECT_MODEL {
    CC "CoreUI" MODEL_SELECT_BOX title:("Seleziona il modello da esportare") loaded-models
    IF (endbutton = "ok") {
        CC "Core" GET_MODEL_INFO modelid: (VAL modelids)
        CC "Core" GET_MODEL_ID objid:(modelids)
        CC "Core" GET_ATTR_VAL objid:(VAL modelids) attrname:("Model Type") 
        SETL modelType: (val)
        CC "Core" GET_ATTR_VAL objid:(VAL modelids) attrname:("Platform")
        SETL platformModel: (val)
        GET_LOGGED_USER modelid: (VAL modelids) respstat: status

        IF (status = 200) {
            IF (modelType = "PSM" AND platformModel = "ThingsBoard") {
                IF (modeltype = "IoT Scenario") {
                    SET modelScenarioID: (VAL modelids)
                    SCENARIO
                } ELSIF (modeltype = "IoT Logic") {
                    SET modelLogicID: (VAL modelids)
                    LOGIC
                }
            } ELSE {
                CC "AdoScript" ERRORBOX ("Il modello selezionato non e' valido.\n\nDevi selezionare un modello di tipo PSM per la piattaforma Thingsboard.") title:("Modello non valido")
            }
        }
    }
}

# Converte una lista di elementi array
PROCEDURE global CONVERT_LIST_TOARRAY
    input: string # lista di elementi in formato stringa
    output: reference # array con gli elementi della lista
{
    SET output: ({})
    FOR element in:(input) {
        SET dummy: (aappend(output, element))
    }
}

# Procedura che serve ad inserire un nuovo record all'interno di una tabella
PROCEDURE global ADD_TABLE_RECORD
    objid: integer # ID dell'oggetto in cui si trova la tabella
    classname: string # Nome della classe
    tableName: string # Nome della tabella
    recAttr: string # Nome attributo
    recVal: string # Valore attributo
{
    CC "Core" GET_CLASS_ID classname:(classname) # classid è il valore che ritorna GET_CLASS_ID
    CC "Core" GET_ATTR_ID classid:(classid) attrname:(tableName)
    EMPTY_TABLE attrid: (attrid) objid: (objid) # Elimino tutte le righe della tabella prima di inserire il nuovo id di thingsboard
    CC "Core" ADD_REC_ROW objid:(objid) attrid:(attrid) # attrid è il valore che ritorna GET_ATTR_ID clid è il valore che ritorna GET_CLASS_ID 
    CC "Core" SET_ATTR_VAL objid:(rowid) attrname:"Attribute" val:(recAttr) # rowid è il valore che ritorna ADD_REC_ROW
    CC "Core" SET_ATTR_VAL objid:(rowid) attrname:"Value" val:(recVal) # rowid è il valore che ritorna ADD_REC_ROW
}

# Procedura che serve ad eliminare tutti i record di una tabella
PROCEDURE global EMPTY_TABLE
    attrid: integer # ID attributo
    objid: integer # ID oggetto in cui si trova la tabella da eliminare
{ 
    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objid) attrid:(attrid)
    FOR row in:(rowids) {
        CC "Core" REMOVE_REC_ROW objid:(objid) attrid:(attrid) rowid:(VAL row)
    }
}

# Procedura che ritorna gli attributi della tabella platformData.
# Ritorna il valore dell'attributo che corrisponde ad "attribute"
PROCEDURE global GET_RECORD_VALUE objectid: integer attribute: string val: reference {
    CC "Core" GET_CLASS_ID objid:(objectid)
    CC "Core" GET_ATTR_ID classid:(classid) attrname:("platformData")
    CC "Core" GET_ATTR_TYPE attrid:(attrid)
    CC "Core" GET_CLASS_NAME classid:(objectid)

    CC "Core" GET_ALL_REC_ATTR_ROW_IDS objid:(objectid) attrid:(attrid)
    IF(classname != "attribute") {
        IF(rowids.length > 0) { #IF((rowids.length > 0) AND (classname != "attribute"))
            FOR row in:(rowids) {
                CC "Core" GET_ATTR_VAL objid:(VAL row) attrname:("Attribute")
                IF(val = attribute) {
                    CC "Core" GET_ATTR_VAL objid:(VAL row) attrname:("Value") # Ritorna il valore dell'id dell'oggetto 
                }
            }
        } ELSE {
            #CC "AdoScript" ERRORBOX "Nella tabella non sono presenti righe"
        }
    }
}

